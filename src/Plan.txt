Sudoku class
	9x9 array of cells
	Load() Allows user to load and checks after each addition that it is valid (n) for empty and corresponding # for number
	LoadFromFile() uses sudoku file to load
	Print()
	Solve()
		maybe a while(row < 10) loop... then I can increment and decrement row and col without for loops and recursion...

int row
int col
boolean safe
while row < 9
{
	safe = true;
	if cell is not marked "done"{
		increase value of cell by 1
		if value of cell > 9{
			value of cell = 0;
			col--;
		}
		perform checks if any check fails, break and safe = false;
		if safe = true, increase col. 

	} else {
		increase col 
	}
	if col >8, row++, col = 0
	if col <0, row --, col = 8
	if row < 0, return false;
}
return true;


testBox(int row, int col)
{
	int testRow;
	int testCol;
	boolean pass = true;
	if row < 3, testRow = 0
	if row < 6, testRow = 3
	else testRow = 6
	if col < 3, testCol = 0
	if col < 6, testCol = 3
	else testCol = 6

	for(int i = 0; i < 3; i ++)
	{
		for(int j = 0; j < 3; j++)
		{
			if(testRow + i != row && testCol + j != col)
				{
					if board[row][col].getValue() == board[testRow + i][testRow + j] && board[testRow + i][testRow + j].getValue() != 0
						pass = false;
				}
		}
	}	
	return pass;
}


	

cell class
	can be marked as "final" or "adjustable" (Done boolean)
	

 ------- ------- -------
| n n n | n n n | n n n |
| n n n | n n n | n n n |
| n n n | n n n | n n n |
 ------- ------- -------
| n n n | n n n | n n n |
| n n n | n n n | n n n |
| n n n | n n n | n n n |
 ------- ------- -------
| n n n | n n n | n n n |
| n n n | n n n | n n n |
| n n n | n n n | n n n |
 ------- ------- -------